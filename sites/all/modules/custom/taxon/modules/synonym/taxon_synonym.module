<?php
// $Id$

/**
 * @file
 * Displays synonym names on taxon pages.
 */

/**
 * Implements hook_theme().
 */
function taxon_synonym_theme() {
  return array(
    'taxon_synonyms' => array(
      'template' => 'taxon-synonyms',
      'variables' => array('synonyms' => NULL),
    ),
  );
}

/**
 * Implements hook_taxon_load().
 */
function taxon_synonym_taxon_load($taxon) {
  if (!isset($taxon->synonyms)) {
    $taxon->synonyms = array();

    $result = taxon_db_select('taxa_synonyms', 's')
      ->fields('s', array('synonym_name', 'synonym_author', 'info_json'))
      ->condition('taxon_id', $taxon->id)
      ->execute();

    while($row = $result->fetchAssoc()) {
      $row['info'] = json_decode($row['info_json'], TRUE);
      unset($row['info_json']);
      $taxon->synonyms[] = $row;
    }
  }
}

/**
 * Implements hook_taxon_view().
 */
function taxon_synonym_taxon_view($taxon) {
  if (!empty($taxon->synonyms)) {
    $taxon->content['synonyms'] = array(
      '#theme' => 'taxon_synonyms',
      '#synonyms' => $taxon->synonyms,
      '#weight' => 25,
    );
  }
}

/**
 * Process variables for taxon synonyms.
 *
 * The $variables array contains the following arguments:
 * - $synonyms
 *
 * @see taxon-synonyms.tpl.php
 */
function template_preprocess_taxon_synonyms(&$variables) {
  // Sanitize data.
  foreach ($variables['synonyms'] as $key => $synonym) {
    $variables['synonyms'][$key]['synonym_name'] = check_plain($synonym['synonym_name']);
    $variables['synonyms'][$key]['synonym_author'] = check_plain($synonym['synonym_author']);
  }
}
